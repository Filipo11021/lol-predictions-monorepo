// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @map("_id")
  username      String
  notifications Boolean @default(true)

  votes Vote[]

  createdAt      DateTime?        @default(now())
  QuestionAnswer QuestionAnswer[]
}

model Team {
  code  String @id @map("_id")
  name  String
  image String

  games   Game[]   @relation(fields: [gameIds], references: [id])
  gameIds String[]

  Vote     Vote[]
  wonGames Game[] @relation(name: "winner")

  createdAt DateTime? @default(now())
}

model Vote {
  id String @id @map("_id")

  team     Team   @relation(fields: [teamCode], references: [code])
  teamCode String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  Game   Game   @relation(fields: [gameId], references: [id])
  gameId String

  score String @default("1-0")

  createdAt DateTime? @default(now())

  @@unique([userId, gameId])
}

model Game {
  id String @id @map("_id")

  gameDay   GameDay @relation(fields: [gameDayId], references: [id])
  gameDayId String

  teamCodes String[]
  teams     Team[]   @relation(fields: [teamCodes], references: [code])

  voters Vote[]

  startTime DateTime

  type MatchType? @default(BO3)

  winner     Team?   @relation(fields: [winnerCode], references: [code], name: "winner")
  winnerCode String?
  score      String?

  createdAt DateTime? @default(now())
}

enum MatchType {
  BO1
  BO3
  BO5
}

model GameDay {
  id String @id @map("_id")

  games          Game[]
  CurrentGameDay CurrentGameDay?

  firstMatchStart DateTime

  createdAt DateTime? @default(now())
}

model CurrentGameDay {
  id Workspace @id @default(Main) @map("_id")

  gameDay   GameDay? @relation(fields: [gameDayId], references: [id])
  gameDayId String?  @unique

  messageId String?
}

enum Workspace {
  Main
}

model Info {
  id                        Workspace @id @default(Main) @map("_id")
  notifyCheckMessageId      String?
  notifyCheckMessageChannel String?
}

model Question {
  id            String           @id @default(cuid()) @map("_id")
  messageId     String
  question      String
  answers       String[]
  correctAnswer String[]
  points        Int              @default(1)
  userAnswers   QuestionAnswer[]
}

model QuestionAnswer {
  id         String   @id @map("_id")
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  answer     String
  userId     String
  user       User     @relation(fields: [userId], references: [id])

  @@unique([questionId, userId])
}
